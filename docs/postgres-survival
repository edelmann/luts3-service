A short survival guide to using PostgreSQL with SGAS:


## Checking the consistency of the aggregration table

Check that the following two quries give the same result:

SELECT sum(n_jobs) FROM uraggregated;

SELECT count(*) FROM usagerecords ;

If there exist rows in the uraggregated_table, some deviations should exist.
If the table is empty, the numbers should match EXACTLY!



## Triggering full aggregation regeneration

With minimal downtime:

1. Stop sgas.
2. In the database shell:
   TRUNCATE TABLE uraggregated;
   TRUNCATE TABLE uraggregated_update ;
   INSERT INTO uraggregated_update SELECT DISTINCT insert_time::date, machine_name FROM usagerecords;
3. Start SGAS (triggers update run)

Note that this update run will often take several hours. Technically the
TRUNCATE/INSERT statements can be done with SGAS running, but it is not
recommended.

A faster way to redo the full aggregation (but requiring slightly more downtime) is:

1. Stop SGAS
2. In the postgres shell: \i /usr/local/share/sgas/postgres/sgas-postgres-aggregation-rebuild.sql
   This should take a couple minutes. Increasing the work_mem parameter is recommended if you have
   more than 1M records.
3. Start SGAS

