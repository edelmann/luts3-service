SGAS Luts Server Change Log (from version 3.0.0 and onwords)

3.4.0

Support for CouchDB has been removed.

New query interface for extracting information from SGAS.

New authorization engine for significantly more flexible authorization.

Better detection of fake VO information when creating aggregated information.

New discrete_scatterplot and line graph types.

Support relocation using --home in installation.

Add hash index to to schema for significantly faster aggregation updates.

Use embedded database function for aggregation update to avoid ping-pong with
database during updating.

Write friendly greeting with version number to log when starting up.

Various clean-ups.


3.3.2:

Avoid update race condition by running updater in serialized transaction mode.

Deal with closed database connection errors (typically caused by db restarts)
in PostgreSQL database module.


3.3.1:

Flip legend for stacked columns to fit with stack order. Also make a bit more
room for the legend to avoid column-legend overlap, increase legend spacing
a bit, and increase graph size slightly.

Use OrderedDict for parsing configuration file to make the view list on the
SGAS view page the same order as in the configuration file.

Add a PostgreSQL script for doing complete aggregation recalculation in
database (without using SGAS).

New implementation aggregation updater as the old one had a race condition.

Update NginX documentation with details on bug with SSL session and client
certificates.

Ensure that graph y-value height is always at least 1.

Fix group id setting in init.d script.

Correctly calculate maximum y-value for grouped column charts.

Be less aggresive in the aggregation updater timer when the updater is already
running.


3.3.0:

New (rewritten from scratch) visualization engine. The graphs are accessable
via HTTPS and hence viewable ih the browser. Data sources are specified via SQL
in the configuration file. Currently supported graph types are columns, stacked
columns, grouped columns. View authorization happens via the sgas.authz file.

SGAS now supports running from behind a reverse proxy (nginx). This is partly
due to some strange behaviour from the Python SSL wrapper and that the new
visualization engine must service .css and .js files, for which Twisted Web is
not well suited for. For the visualization engine to work, the LUTS must run
behind a reverse proxy.

Support for UR processor field. Previously node_count has been used for
counting processors (incorrect). The LUTS will detect old loggers only using
node_count and adapt the usage record to the new schema. The schema should
now also be compatable with PostgreSQL 8.3.

Minor updates to the PostgreSQL schema after getting feedback on the 3.2 schema
(some integer -> numeric conversions and longer fields).

Added white list option for bypassing the host - machine name consistency check
as some loggers must be able to register usage records on behalf of other
sites.


3.2.0:

New database backend, which adds support for PostgreSQL along with the existing
CouchDB support. The PostgreSQL backend performs automatic aggregation of the
usage records.

Better record duplicate detection and overwriting, making it possible to log
the same job from multiple places, and keep the record with the most
information (required for setups using both ARC and LRMSURGen).

Host-record consistency check during insert. Hosts can now only register
records with machine names in their own domain (matched with the X509
identity). Strictness is configurable.

Support and configuration option for running as non-root user.

Possible to specify logfile in configuration file.

There is an experimental query and view engine but it is not finalized.


3.1.0:

New _id scheme to conserve space in CouchDB, and perform faster view
generation.

Added a change log.


3.0.1:

Documentation overhaul, including a better structured installation guide, and
an explanation of the main concepts as it was a bit tricky to understand for
new people. Some additional view examples have been added as well.

Return error code 500 (server error) instead of 400 (client error) when an
error happens on insertion.

Better error messages if the underlying database is unavailable.

Some more test cases have been added.

Test for host certificate, key, and CA dir during startup and fail at startup
instead of starting up fine and reporting the error in the log (should confuse
admins a bit less in case of a misconfiguration).

More flexible view engine. Can now report complex results (i.e., multiple
values per table cell) as well as having a single column (1-dimensional
results).

Disables graph rendering of results, as it was buggy and largely useless.

View engine have had a bit of an overhaul, though no visible changes. Mainly to
prepare for more flexible view usage in the future. A view overview page is now
available and will list the custom defined views (URL: /sgas/view).

Slightly less verbose logging as the service wrote quite a bit to the log file.


3.0.0:

New, completely rewritten service.

Seperate backend database. We are now using CouchDB as backend database for
storing usage records. Using a proper database allows easier generation of
summary data.

Data insertion and retrieval now uses ordinary TLS and HTTP. This means that it
is possible to use stock tools as cURL and a Browser to use the LUTS.

Signifanatly easier installation and configuration compared to previous SGAS
versions.

View engine for creating custom views of aggregated data. This part is still a
bit rough but is is possible to create view of aggregated data. These can be
displayed directly in the browser or be fetched with an HTTP client




